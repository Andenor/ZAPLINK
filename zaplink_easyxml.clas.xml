<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_CLAS" serializer_version="v1.0.0">
 <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
  <asx:values>
   <VSEOCLASS>
    <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
    <VERSION>1</VERSION>
    <LANGU>E</LANGU>
    <DESCRIPT>ZapLink Easy XML Tools</DESCRIPT>
    <EXPOSURE>2</EXPOSURE>
    <STATE>1</STATE>
    <CLSCCINCL>X</CLSCCINCL>
    <FIXPT>X</FIXPT>
    <UNICODE>X</UNICODE>
    <RSTAT>K</RSTAT>
    <MSG_ID>ZAPLINK_EASYXML</MSG_ID>
   </VSEOCLASS>
   <DESCRIPTIONS>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>ADD_ANY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Transform any data to XML</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>ADD_OBJECT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Transform Object to XML</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>ADD_SELF</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Transform special self field to XML</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>ADD_STRUCTURE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Transform Structure to XML</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>ADD_TABLE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Transform table to XML</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>ANY2XML</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Any data =&gt; XML</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>APPLICATION_LOG</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Message Collector: Standard Implementation</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>BAL_LEVEL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Application Log: Level of detail</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>CHAR_TO_PROTECT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Charater list to be protected</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>CLASS_CONSTRUCTOR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>CLASS_CONSTRUCTOR</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>CONSTRUCTOR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>CONSTRUCTOR</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>CONTEXT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>For debug porpuse</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>CRC</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Return Code as String</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>ELEM_2_STRING</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Convert Elementary type to string</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>EN_LINE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Element Name for Table&apos;s line</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>GET_ATTRIBUTS</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Get XML root Attributes</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>GET_NODE_TEXT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Read XML node for text</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>GET_REF_TYPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>For Ref data (like object) type get target type</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>ISSUE46_PREFIX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Prefix for attribut name</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>ISSUE46_REGEX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Regex to convert back fieldname</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>IS_SIMPLE_TYPE_KIND</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Determine Kind from Type kind for simple kind</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>IXML</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>IF_IXML</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>MSGID</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Message Class</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>NODE2STRING</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Convert node to String</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>NODE_IS_NOT_TYPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Do node is not a speficied type</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>NODE_IS_TYPE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Do node is the speficied type</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>O_MYCX</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>ZAPlink Framework : Root exception class</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>PROTECTION_CHAR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Protection Character</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>PROTECT_STRING</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Protect String for XML value</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>RC</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Return Code</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>READ_ANY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Read XML to Any data</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>READ_OBJECT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Read XML to Object</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>READ_STRUCTURE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Read XML to Structure</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>READ_TABLE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Read XML to Table</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>RESET</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Reste attributs</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>SELF_FIELDNAME</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Special FieldName in structure</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>STACK</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Add context to context stack</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>STACK_DESCR</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Add context to context stack from description object</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>STRING_2_ELEM</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Convert Elementary type to string</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>TO_EXCEPTION</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>ZAPlink Framework : Root exception class</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>TO_LOG</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Message Collector</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>TO_ROOT_EXCEPTION</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>ZAPlink Framework : Root exception class</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>TS_ELE</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Donn#e pour</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>TT_CONTEXT</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>For debug porpuse :Stack of calls</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>TT_ITF_EL</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Interfaces &amp; it&apos;s Elements</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>UNPROTECT_STRING</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Unprotect String issued from XML value</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>UNSTACK</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>Remove stack entry</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>XML2ANY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>XML =&gt; Any data</DESCRIPT>
    </SEOCOMPOTX>
    <SEOCOMPOTX>
     <CLSNAME>ZAPLINK_EASYXML</CLSNAME>
     <CMPNAME>_XML2ANY</CMPNAME>
     <LANGU>E</LANGU>
     <DESCRIPT>XML =&gt; Any data</DESCRIPT>
    </SEOCOMPOTX>
   </DESCRIPTIONS>
  </asx:values>
 </asx:abap>
</abapGit>
